/*
 * Generated by Digital. Don't modify this file!
 * Any changes will be lost if this file is regenerated.
 */

module HalfAdderAdd (
  input X,
  input Y,
  output S,
  output C
);
  assign S = (X ^ Y);
  assign C = (X & Y);
endmodule

module Fulladder (
  input ci,
  input a,
  input b,
  output s,
  output co
);
  wire s0;
  wire s1;
  wire s2;
  HalfAdderAdd HalfAdderAdd_i0 (
    .X( a ),
    .Y( b ),
    .S( s0 ),
    .C( s2 )
  );
  HalfAdderAdd HalfAdderAdd_i1 (
    .X( ci ),
    .Y( s0 ),
    .S( s ),
    .C( s1 )
  );
  assign co = (s1 | s2);
endmodule

module bb_fulladder (
  input ci,
  input a,
  input b,
  output s,
  output co
);
  Fulladder Fulladder_i0 (
    .ci( ci ),
    .a( a ),
    .b( b ),
    .s( s ),
    .co( co )
  );
endmodule
